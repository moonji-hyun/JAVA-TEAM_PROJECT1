From 2bbb62317d08d5e600ca65eb89a0e164ccb00561 Mon Sep 17 00:00:00 2001
From: "DESKTOP-73MOQ90\\USER" <177100174u@gmail.com>
Date: Tue, 9 Jul 2024 11:43:41 +0900
Subject: [PATCH] V1.0.3

---
 com/show/DTO/LoginDTO.java  |  80 ------------
 com/show/DTO/MemberDTO.java |  91 +++++++++----
 com/show/SV/LoginSV.java    | 246 +++++++++++++++++++-----------------
 3 files changed, 198 insertions(+), 219 deletions(-)
 delete mode 100644 com/show/DTO/LoginDTO.java

diff --git a/com/show/DTO/LoginDTO.java b/com/show/DTO/LoginDTO.java
deleted file mode 100644
index 31d60e1..0000000
--- a/com/show/DTO/LoginDTO.java
+++ /dev/null
@@ -1,80 +0,0 @@
-package com.show.DTO;
-
-public class LoginDTO {
-	// 필드
-	private String id;
-	private String pw;
-	private String nickName;
-	private String birth;// 주민번호 앞자리 string으로 저장
-	private String sex; // 주민번호 뒷자리 첫번째 숫자 x%2이용하여 판별
-	private String pNo; // 전화번호 - 없이 저장
-	private Boolean loginStatus;
-
-	// 메서드
-	public String getId() {
-		return id;
-	}
-
-	public String getPw() {
-		return pw;
-	}
-
-	public String getNickName() {
-		return nickName;
-	}
-
-	public String getBirth() {
-		return birth;
-	}
-
-	public String getSex() {
-		return sex;
-	}
-
-	public String getpNo() {
-		return pNo;
-	}
-
-	public String getMail() {
-		return mail;
-	}
-
-	public void setId(String id) {
-		this.id = id;
-	}
-
-	public void setPw(String pw) {
-		this.pw = pw;
-	}
-
-	public void setNickName(String nickName) {
-		this.nickName = nickName;
-	}
-
-	public void setBirth(String birth) {
-		this.birth = birth;
-	}
-
-	public void setSex(String sex) {
-		this.sex = sex;
-	}
-
-	public void setpNo(String pNo) {
-		this.pNo = pNo;
-	}
-
-	public void setMail(String mail) {
-		this.mail = mail;
-	}
-
-	public Boolean getLoginStatus() {
-		return loginStatus;
-	}
-
-	public void setLoginStatus(Boolean loginStatus) {
-		this.loginStatus = loginStatus;
-	}
-
-	private String mail;
-
-}
diff --git a/com/show/DTO/MemberDTO.java b/com/show/DTO/MemberDTO.java
index 4979a91..7d6ee6f 100644
--- a/com/show/DTO/MemberDTO.java
+++ b/com/show/DTO/MemberDTO.java
@@ -9,37 +9,37 @@ public class MemberDTO {
 	private String name;
 	private String nickName;
 	private String birth;// 주민번호 앞자리 string으로 저장
-	private int sex; // 주민번호 뒷자리 첫번째 숫자 x%2이용하여 판별
+	private String sex; // 주민번호 뒷자리 첫번째 숫자 x%2이용하여 판별
 	private String pNo; // 전화번호 - 없이 저장
-	private String mail;
 	private Boolean loginStatus;
+	private boolean usability;
 	private Author author;
 
 	// 생성자
 	public MemberDTO() {
-		this.id = "guest";
-		this.nickName = "guest";
-		this.author = Author.GUEST;
-		this.loginStatus=false;
+	      this.id = "guest";
+	      this.nickName = "guest";
+	      this.author = Author.GUEST;
+	      this.loginStatus=false;
 	}
-	
-	public MemberDTO(String id,String pw) {//로그인시 생성자
+
+	public MemberDTO(String id, String pw) {// 로그인시 생성자
 		this.id = id;
-		this.pw = pw;		
-		this.loginStatus=false; //로그인 검증후 성공시 변경
+		this.pw = pw;
+		// this.nickName = LoginDTO. 로그인한 정보의 닉네임을 가져온다.
+		this.loginStatus = false; // 로그인 검증후 성공시 변경
 	}
-	
-	public MemberDTO(String id,String pw,String name,String ssn,String nickName,String pNo,String mail) {//회원가입시 생성자
+
+	public MemberDTO(String id, String pw, String ssn, String nickName, String pNo, String mail) {// 회원가입시 생성자
 		this.id = id;
 		this.pw = pw;
-		this.birth = ssn.substring(0, 6);
-		this.sex = (int)ssn.charAt(6) ;
-		this.name = name;
+		// this.birth = ssn에서 숫자추출하여 삽입(메서드)
+		// this.sex = ssn에서 숫자추출하여 삽입(메서드)
 		this.nickName = nickName;
 		this.pNo = pNo;
 		this.mail = mail;
-		this.author = Author.USER; //회원가입시 권한부여
-		this.loginStatus=false; //로그인하면 상태수정
+		this.author = Author.USER; // 회원가입시 권한부여
+		this.loginStatus = false; // 로그인하면 상태수정
 	}
 
 	// 메서드
@@ -59,7 +59,7 @@ public class MemberDTO {
 		return birth;
 	}
 
-	public int getSex() {
+	public String getSex() {
 		return sex;
 	}
 
@@ -71,8 +71,27 @@ public class MemberDTO {
 		return mail;
 	}
 
-	public void setId(String id, ArrayList<MemberDTO> loginDTOs) {
-		this.id = id;
+	public boolean setId(String joinID, ArrayList<MemberDTO> memberDTOs, boolean pass) {// 회원가입시 Id 생성 중복 검증용 setter	
+//		System.out.println("여기는 왓냐");			
+//		System.out.println(memberDTOs.size());
+			for (MemberDTO findId : memberDTOs) {
+				if (findId.getId().equals(joinID)) {					
+					this.usability = false;
+					System.out.println("사용중인 ID입니다.");
+					pass = false;
+					break;}
+								
+				}
+			this.id = joinID;
+			return pass;
+			
+			
+		
+
+	}
+
+	public void setUsability(boolean usability) {
+		this.usability = usability;
 	}
 
 	public void setPw(String pw) {
@@ -87,7 +106,7 @@ public class MemberDTO {
 		this.birth = birth;
 	}
 
-	public void setSex(int sex) {
+	public void setSex(String sex) {
 		this.sex = sex;
 	}
 
@@ -107,7 +126,9 @@ public class MemberDTO {
 		this.loginStatus = loginStatus;
 	}
 
-	public Author getAuthor() {
+	private String mail;
+
+	public Object getAuthor() {
 		return author;
 	}
 
@@ -115,6 +136,23 @@ public class MemberDTO {
 		this.author = author;
 	}
 
+	
+
+	public boolean isUsability() {
+		return usability;
+	}
+
+	/*
+	 * public void setUsability(boolean usability) { this.usability = usability; }
+	 */
+
+	@Override
+	public String toString() {
+		return "MemberDTO [id=" + id + ", pw=" + pw + ", name=" + name + ", nickName=" + nickName + ", birth=" + birth
+				+ ", sex=" + sex + ", pNo=" + pNo + ", loginStatus=" + loginStatus + ", usability=" + usability
+				+ ", author=" + author + ", mail=" + mail + "]";
+	}
+
 	public String getName() {
 		return name;
 	}
@@ -122,7 +160,10 @@ public class MemberDTO {
 	public void setName(String name) {
 		this.name = name;
 	}
-	
-	
 
-}
\ No newline at end of file
+	public void setid(String string) {
+		// TODO Auto-generated method stub
+		
+	}
+
+}
diff --git a/com/show/SV/LoginSV.java b/com/show/SV/LoginSV.java
index 0e7ad49..7d808b7 100644
--- a/com/show/SV/LoginSV.java
+++ b/com/show/SV/LoginSV.java
@@ -3,139 +3,157 @@ package com.show.SV;
 import java.util.ArrayList;
 import java.util.Scanner;
 
-import com.show.DTO.DramaDTO;
 import com.show.DTO.MemberDTO;
 import com.show.DTO.ReviewDTO;
 import com.show.DTO.ShowDTO;
-import com.show.DTO.VarietyDTO;
 
 public class LoginSV {
 
-	public static MemberDTO menu(MemberDTO lSt, Scanner s, Scanner sL, ArrayList<MemberDTO> loginDTOs,
-			ArrayList<ReviewDTO> reviewDTOs, ArrayList<ShowDTO> showDTOs, ArrayList<DramaDTO> dramaDTOs,
-			ArrayList<VarietyDTO> varietyDTOs) {
-		boolean run = true;
-
-		while (run) {
-			if (!lSt.getLoginStatus()) {
-				System.out.println("1. 로그인 | 2. 회원가입 | 3. exit | 4. 영화 정보 찾기");
-				System.out.print(">>>");
-				String select = s.next();
-				switch (select) {
-
-				case "1":
-					System.out.println("로그인을 위한 ID / PW를 입력하세요.");
-					System.out.print("ID : ");
-					String id = s.next();
-					System.out.print("PW : ");
-					String pw = s.next();
-					MemberDTO login = new MemberDTO(id, pw);
-
-					for (MemberDTO find : loginDTOs) {
-
-						if (find.getId().equals(id)) {
-							System.out.println("ID를 확인했습니다.");
-
-							if (find.getPw().equals(pw)) {
-								System.out.println("PW를 확인했습니다.");
-								System.out.println("로그인 성공!!");
-								lSt = find;
-								lSt.setLoginStatus(true);
-								// 로그인 성공시에 로그인 스테이터스 논리값 부여필요
-							} else {
-								System.out.println("ID와 PW를 확인 해주세요");
-							} // if-if문 종료
-						} else {
-							System.out.println("ID와 PW를 확인 해주세요");
-						} // if문 종료
-					} // for문 종료
-					break;
-				case "2":
-					MemberDTO join = new MemberDTO();
-
-					System.out.println("회원 가입을 시작합니다.");
+	public static MemberDTO menu(MemberDTO loginState, Scanner s, Scanner sL, ArrayList<MemberDTO> memberDTOs,
+			ArrayList<ReviewDTO> reviewDTOs, ArrayList<ShowDTO> showDTOs) {
+		try {
+			System.out.println("1. 로그인 | 2. 회원가입 | 3. 회원정보찾기");
+			System.out.print(">>>");
+			int select = s.nextInt();
+			switch (select) {
+			case 1:
+				System.out.println("로그인을 위한 ID / PW를 입력하세요.");
+				loginState = login(memberDTOs, loginState, s);
+
+				break;
+			case 2:
+				MemberDTO join = new MemberDTO(); 	//
+				System.out.println("회원 가입을 시작합니다.");
+
+				boolean run = true;
+				while (run) {
 					System.out.println("원하시는 ID를 입력하세요");
 					System.out.print(">>>");
 					String joinID = s.next();
-					join.setId(joinID, loginDTOs);
+					boolean pass = true;
+					pass = join.setId(joinID, memberDTOs, pass);
+					if (pass) {
+						join.setUsability(true);
+
+						if (join.isUsability()) {
+							System.out.println("사용 가능한  ID 입니다.");
+							System.out.println("------------------");
+							run = false;
+							} 
+						}
+					}
+
+				System.out.println("원하시는 PW를 입력하세요");
+				System.out.print(">>>");
+				String joinPW = s.next();
+				
+				System.out.println("------------------");
+				System.out.println("이름을 입력하세요");
+				System.out.print(">>>");
+				String joinName = s.next();
 
-					System.out.println("원하시는 PW를 입력하세요");
-					System.out.print(">>>");
-					String joinPW = s.next();
+				System.out.println("------------------");
+				System.out.println("생년월일을 입력하세요");
+				System.out.print(">>>");
+				String joinBirth = s.next();
 
-					System.out.println("생년월일을 입력하세요");
-					System.out.print(">>>");
-					String joinBirth = s.next();
+				System.out.println("------------------");
+				System.out.println("닉네임을 입력하세요");
+				System.out.print(">>>");
+				String joinNickName = s.next();
 
-					System.out.println("닉네임을 입력하세요");
-					System.out.print(">>>");
-					String joinNickName = s.next();
-
-					join.setPw(joinPW);
-					join.setBirth(joinBirth);
-					join.setNickName(joinNickName);
-					loginDTOs.add(join);
-					break;
-				case "3":
-					System.out.println("메인메뉴로 돌아갑니다.");
-					break;
-				case "4":
-					System.out.println("영화정보 찾기 메뉴로 돌아갑니다.");
-					SearchSV.menu(lSt, s, sL, loginDTOs, reviewDTOs, showDTOs, dramaDTOs, varietyDTOs);
-					break;
-				default:
-					System.out.println("1~3사이에서 입력해주시기 바랍니다.");
-
-				} // switch 종료
-			} else {
-				System.out.println("1. 마이페이지 | 2. 로그아웃 | 3. exit | 4. 영화정보찾기");
+				System.out.println("------------------");
+				System.out.println("이메일을 입력하세요");
 				System.out.print(">>>");
-				String select = s.next();
-				switch (select) {
+				String joinEmail = s.next();
 
-				case "1":
-					MyPageSV.menu(sL, loginDTOs, lSt);
-					break;
-				case "2":
-					MemberDTO join = new MemberDTO();
+				System.out.println("------------------");
+				System.out.println("전화번호를 입력하세요");
+				System.out.print(">>>");
+				String joinPNo = s.next();
+
+				
+				join.setPw(joinPW);
+				join.setName(joinName);
+				join.setBirth(joinBirth);
+				join.setMail(joinEmail);
+				join.setNickName(joinNickName);
+				join.setpNo(joinPNo);
+				memberDTOs.add(join);
+				System.out.println("Id : " + join.getId());
+				System.out.println("PW : " + join.getPw());
+				System.out.println("으로 가입이 완료 되었습니다.");
+				System.out.println("---------------------");
+				break;
+			case 3:
+
+				break;
+			default:
+				System.out.println("1~3사이에서 입력해주시기 바랍니다.");
+
+			} // switch 종료
+		} catch (Exception e) {
+			System.out.println("숫자를 입력해주세요");
+		//	e.printStackTrace();
+		}
 
-					System.out.println("회원 가입을 시작합니다.");
-					System.out.println("원하시는 ID를 입력하세요");
-					System.out.print(">>>");
-					String joinID = s.next();
-					join.setId(joinID, loginDTOs);
+	return loginState;
 
-					System.out.println("원하시는 PW를 입력하세요");
-					System.out.print(">>>");
-					String joinPW = s.next();
+	}
 
-					System.out.println("생년월일을 입력하세요");
-					System.out.print(">>>");
-					String joinBirth = s.next();
 
-					System.out.println("닉네임을 입력하세요");
-					System.out.print(">>>");
-					String joinNickName = s.next();
-
-					join.setPw(joinPW);
-					join.setBirth(joinBirth);
-					join.setNickName(joinNickName);
-					loginDTOs.add(join);
-					break;
-				case "3":
-					System.out.println("메인메뉴로 돌아갑니다.");
-					break;
-				case "4":
-					System.out.println("회원정보 찾기 메뉴로 돌아갑니다.");
-					FIndSV.menu(sL, loginDTOs);
-					break;
-				default:
-					System.out.println("1~3사이에서 입력해주시기 바랍니다.");
-				}
-			}
 
+	private static MemberDTO login(ArrayList<MemberDTO> memberDTOs, MemberDTO loginState, Scanner s) {
+		System.out.print("ID : ");
+		String id = s.next();
+		System.out.print("PW : ");
+		String pw = s.next();
+
+		MemberDTO login = new MemberDTO(id, pw); // 입력받은 ID, PW를 넣을 객체 생성
+
+		try {
+			for (MemberDTO find : memberDTOs) { // memberDTOs 배열을 돌려
+				int i = 0;
+				if (find.getId().equals(id)) { // 입력바다은 id 와 같은것이 있다면
+			//		System.out.println("ID를 확인했습니다.");
+					// 인덱스 번호
+					if (find.getPw().equals(pw)) { // 입력바다은 pw 와 같은것이 있다면
+						System.out.println("PW를 확인했습니다.");
+						System.out.println("로그인 성공!!");
+						i = memberDTOs.indexOf(find); // 그것의 인덱스 번호를 i에 삽입
+
+						login = memberDTOs.get(i); // 배열 i번에 있는 내용을 login에 삽입
+						login.setLoginStatus(true); // login의 logStatus를 변경
+
+						loginState = login;
+				//		System.out.println(login.toString());
+						break;
+
+					} else {
+			//			System.out.println("현우냐?");
+						break;
+					} // if-if문 종료
+				} else {
+					System.out.println("id, pw를 확인해주세요");
+			//		System.out.println("누구냐 넌?");
+//					System.out.println(loginState.getId());
+//					System.out.println(find.getId());
+//					System.out.println(login.getPw());
+					//System.out.println(login.toString());
+					
+				} // if문 종료
+				
+			
+			} // for문 종료
+		
+		} catch (Exception e) {
+		
+			System.out.println("숫자를 입력해주세요");
+		//	e.printStackTrace();
 		}
-		return lSt;
-	}
+
+		return loginState;
+
+	} // login() 메서드 종료
 
 }
-- 
2.43.0.windows.1

